<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_entrar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABCRJREFUeF7tm9lP1FAUxnnyn4UH/wAEQYzEgLyIsgU0kQeGbXgBE+MY2RdhBiGy
        yCLCMCyyiU++XPuVe5rbcpl2mJ72gnOSX2hvb3u+75s7ZSaTlpWqVKUqVZhVXZ140FDe+byxoitrIQwh
        21DRVQ9tUiZfNZZ3PtMIMANLm5TJV9arv49mwyPfxOh8LjSml47EwtqJA/b95hCp1HcKIStl8hWl7RVX
        DMWY/7JyIsbTB84qkDL5KuwAwjCPOXcygLDMgzsXQJjmwZ0KoBjz86vXzWOucQGs/TjVjnOYxzGjAsis
        HouT8z/2X3WcyzwwJoD06i9xePLbDgB/sY9xTvPAiADWd05t4142985dYsM2D4wIAHhXwNLGqUsoh3lg
        TACA7gHLG26RXOaBUQGAjd0zl0BO88CoALxiuc0DYwLwM5+a2BGtNYOitXZATKdzrrm3NQ+MCCCI+ZZH
        fY7Ylqo+J4RizAO6ppTJV9RIFaoTm8/8m9qEDbYRwtRCrijzgHRJmXxFjfKJ9TN/sbdmQyG8quwVH8d3
        brxeEEiXlMlX1OgmsV7zoPXxgMv837MtG10ItzEPSJeUyVfUKKh5jLU/GbTP6artcQXgDeG1tUq8N8Yg
        oAfpkjL5ihoFNY9jM5l9axX0OyGc794cgnpjDAL1JV1SJl9RI50InXnCDqEq3BDUvqRLyvSvxvKuCTop
        Dt7V97kCKDQEb+h0XWnPv+iEuEg0Ja8FEDQE3Yqj60p7/kUn6ETETb4QdObvXQBADaGtZiCveXDvA8hn
        HtyrAFTz+M8xPrenNa1y6wDiItE0GJp5QNeV9vzLmjxGJ8VBd31/aOYBXVfa4ytqRHdllXxfadUPQjAJ
        s2GZB6RLyuQramSSeUC6pEy+okZBzQPcxXEOl3lAuqRMvqJGQc0D+jboDSAs84B0SZl8RY2CmgdX3wbd
        q6AQ83PLRza6YwTpkjL5ihoFNU94QwhqfmzhQPzMXdhgWzcHkC4pk6+oUSHmCTUE4Gd+cvFA5I6ufmUC
        2MaYbi5dU8rkK2qkNg9inkAI7XVJmyDv+anFQ5G1jANs6+aA2AIoxLwKzlMN5GNh5dhGd4yIJYB85rf2
        zkV6zf3DKFGI+aBEHoCfebxn961lm1l3H+MwDyIPQDXlBa989vhSfN30/2k8LIwKAKQjeuUJ4wJQ4TYP
        jA0gCvPAyACiMg9iC6Cjbkh0PB1yGcdYm/VBRxXYWpu0GGQbiy0A7746pgrmHqN9KZOvqBGMzi4fOo1T
        M9s2Hya3nLGR0Q0HrrFPs1cfp2lfyuQrapSa3hb9I4viZVWvTd9IxiHKsf73GTH82XlgIroAVDEmEFkA
        9MhMd/e4VkgcQIsMICtl8tV//9AUHk1rrkokXzx8e6kVEQPQ0lzZk4zksblSlapUd6jKyv4BdacD6x1C
        EdYAAAAASUVORK5CYII=
</value>
  </data>
</root>